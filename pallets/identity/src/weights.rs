
//! Autogenerated weights for `pallet_identity`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 47.0.0
//! DATE: 2025-05-11, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `DESKTOP-AH3IE72`, CPU: `AMD Ryzen 3 3100 4-Core Processor`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --runtime
// /home/neurosx/WORKING_WORKSPACE/StandaloneSolochain2503/solochain/target/release/wbuild/solochain-template-runtime/solochain_template_runtime.compact.compressed.wasm
// --pallet
// pallet_identity
// --extrinsic
// 
// --template
// /home/neurosx/WORKING_WORKSPACE/StandaloneSolochain2503/solochain/pallets/benchmarking/frame-weight-template.hbs
// --output
// /home/neurosx/WORKING_WORKSPACE/StandaloneSolochain2503/solochain/pallets/identity/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_identity`.
pub trait WeightInfo {
	fn create_identity() -> Weight;
	fn revoke_identity() -> Weight;
	fn add_or_update_identity_trait(l: u32, ) -> Weight;
	fn remove_identity_trait(l: u32, ) -> Weight;
}

/// Weights for `pallet_identity` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Identity::IdentityNumber` (r:1 w:1)
	/// Proof: `Identity::IdentityNumber` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Identity::IdentityList` (r:1 w:1)
	/// Proof: `Identity::IdentityList` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn create_identity() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `3517`
		// Minimum execution time: 18_052_000 picoseconds.
		Weight::from_parts(21_865_000, 3517)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Identity::IdentityList` (r:1 w:1)
	/// Proof: `Identity::IdentityList` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn revoke_identity() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108`
		//  Estimated: `3517`
		// Minimum execution time: 18_122_000 picoseconds.
		Weight::from_parts(18_825_000, 3517)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Identity::IdentityList` (r:1 w:0)
	/// Proof: `Identity::IdentityList` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Identity::IdentityTraitList` (r:1 w:1)
	/// Proof: `Identity::IdentityTraitList` (`max_values`: None, `max_size`: Some(2088), added: 4563, mode: `MaxEncodedLen`)
	/// The range of component `l` is `[1, 1024]`.
	fn add_or_update_identity_trait(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108`
		//  Estimated: `5553`
		// Minimum execution time: 20_201_000 picoseconds.
		Weight::from_parts(22_339_241, 5553)
			// Standard Error: 770
			.saturating_add(Weight::from_parts(10_082, 0).saturating_mul(l.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Identity::IdentityList` (r:1 w:0)
	/// Proof: `Identity::IdentityList` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Identity::IdentityTraitList` (r:0 w:1)
	/// Proof: `Identity::IdentityTraitList` (`max_values`: None, `max_size`: Some(2088), added: 4563, mode: `MaxEncodedLen`)
	/// The range of component `l` is `[1, 1024]`.
	fn remove_identity_trait(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3517`
		// Minimum execution time: 18_577_000 picoseconds.
		Weight::from_parts(21_017_528, 3517)
			// Standard Error: 467
			.saturating_add(Weight::from_parts(1_949, 0).saturating_mul(l.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `Identity::IdentityNumber` (r:1 w:1)
	/// Proof: `Identity::IdentityNumber` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Identity::IdentityList` (r:1 w:1)
	/// Proof: `Identity::IdentityList` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn create_identity() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `3517`
		// Minimum execution time: 18_052_000 picoseconds.
		Weight::from_parts(21_865_000, 3517)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Identity::IdentityList` (r:1 w:1)
	/// Proof: `Identity::IdentityList` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn revoke_identity() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108`
		//  Estimated: `3517`
		// Minimum execution time: 18_122_000 picoseconds.
		Weight::from_parts(18_825_000, 3517)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Identity::IdentityList` (r:1 w:0)
	/// Proof: `Identity::IdentityList` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Identity::IdentityTraitList` (r:1 w:1)
	/// Proof: `Identity::IdentityTraitList` (`max_values`: None, `max_size`: Some(2088), added: 4563, mode: `MaxEncodedLen`)
	/// The range of component `l` is `[1, 1024]`.
	fn add_or_update_identity_trait(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108`
		//  Estimated: `5553`
		// Minimum execution time: 20_201_000 picoseconds.
		Weight::from_parts(22_339_241, 5553)
			// Standard Error: 770
			.saturating_add(Weight::from_parts(10_082, 0).saturating_mul(l.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Identity::IdentityList` (r:1 w:0)
	/// Proof: `Identity::IdentityList` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Identity::IdentityTraitList` (r:0 w:1)
	/// Proof: `Identity::IdentityTraitList` (`max_values`: None, `max_size`: Some(2088), added: 4563, mode: `MaxEncodedLen`)
	/// The range of component `l` is `[1, 1024]`.
	fn remove_identity_trait(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3517`
		// Minimum execution time: 18_577_000 picoseconds.
		Weight::from_parts(21_017_528, 3517)
			// Standard Error: 467
			.saturating_add(Weight::from_parts(1_949, 0).saturating_mul(l.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
