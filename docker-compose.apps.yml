# Docker Compose for Application Services Only
# Use this when testing with k3s validators to avoid port conflicts

services:
  app-nginx:
    #image: ghcr.io/fennellabs/app-nginx:main
    build: ./app-nginx
    ports:
      - 8080:8080
    depends_on:
      - 'app'
    networks:
      - fennel_network

  nginx:
    #image: ghcr.io/fennellabs/fennel-nginx:master
    build: ./nginx
    volumes:
      - staticvol:/opt/app/static
      - mediavol:/opt/app/mediafiles
    ports:
      - 8081:8081
    depends_on:
      - 'api'
    networks:
      - fennel_network
    
  substrate-nginx:
    #image: ghcr.io/fennellabs/substrate-nginx:main
    build: ./substrate-nginx
    ports:
      - 8082:8082
    depends_on:
      - 'frontend'
    networks:
      - fennel_network

  app:
    #image: ghcr.io/fennellabs/whiteflag-schoolpilot:v1.2
    build: ./whiteflag-schoolpilot/
    environment:
      - API_URL=http://localhost/api/
    entrypoint: /bin/bash
    command: -c "serve -s /app/build"
    ports:
      - 3000:3000
    networks:
      - fennel_network

  frontend:
    #image: ghcr.io/fennellabs/substrate-front-end-template:main
    build: ./substrate-front-end-template/
    entrypoint: /bin/bash
    command: -c "/app/node_modules/serve/build/main.js -s /app/build -l 8000"
    ports:
      - 8000:8000
    networks:
      - fennel_network

  api:
    entrypoint: /bin/bash
    command: -c "source /opt/venv/bin/activate && /opt/app/runner.sh init-all-run"
    #image: ghcr.io/fennellabs/fennel-service-api:master
    build: ./fennel-service-api/
    volumes:
      - staticvol:/opt/app/static
      - mediavol:/opt/app/mediafiles
    environment:
      - DEBUG=True
      - ADMIN_NAME=""
      - ADMIN_EMAIL=""
      - EMAIL_HOST=""
      - EMAIL_PORT=""
      - EMAIL_USERNAME=""
      - EMAIL_PASSWORD=""
      - DEFAULT_FROM_EMAIL=""
      - SERVER_EMAIL=""
      - SECRET_KEY=2HY>fXi!dQ&(9Vf.XghCa;L6G=Ul4r-Bwqh>ae0RG3vIh1ZJ%T
      - FENNEL_SUBSERVICE_IP=http://subservice:6060
      - FENNEL_CLI_IP=http://fennel-cli:9031
      - POSTGRES_DB=database
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=postgres
      - POSTGRES_NAME=postgres
    depends_on:
      - 'database'
      - 'fennel-cli'
      - 'subservice'
    ports:
      - 1234:1234
    networks:
      - fennel_network

  database:
    image: 'postgres'
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - fennel_network

  fennel-cli:
    #image: ghcr.io/fennellabs/fennel-cli:main
    build: ./fennel-cli/
    entrypoint:
      - /app/target/release/fennel-cli
      - start-api
    ports:
      - 9030:9030
    networks:
      - fennel_network

  subservice:
    #image: ghcr.io/fennellabs/subservice:main
    build: ./subservice/
    entrypoint: /bin/bash
    command: -c "pm2-runtime /app/build/src/server.js"
    ports:
      - 6060:6060
    networks:
      - fennel_network

  # NOTE: Chain service excluded - use k3s for blockchain validators

volumes:
  db:
  staticvol:
  mediavol:
  appstaticvol:

networks:
  fennel_network:
    driver: bridge 